from trains_with_torch import main as torchmain
from trains_with_sklearn import main as skmain
from multiprocessing import Pool

"""
This is a grid search
"""
RESULT_FNAME = './grid_search_result.txt'
USE_GPU = True
INFER = False

def dowork(a):
    i, params = a
    print("##", i)
    try:
        if params['model'].startswith('sk'):
            PROJ_ID, LOSS = skmain(params, USE_GPU, INFER, verbose=False)
            with open(RESULT_FNAME, 'a') as f:
                f.write("##" + str(i) + "\n" + PROJ_ID + "\n" + f"{LOSS:.10f}\n\n")
        else:
            PROJ_ID, LOSS = torchmain(params, USE_GPU, INFER, verbose=False)
            with open(RESULT_FNAME, 'a') as f:
                f.write("##" + str(i) + "\n" + PROJ_ID + "\n" + f"{LOSS:.10f}\n\n")
    except Exception as e:
        PROJ_ID = "-".join(
        ['sk', params['model'], '_'.join([i[0] + i[-1] if type(i) == str else str(i) for i in params['features']]),
         str(params['speed_normalizer']),
         '_'.join([f"{k}_{v}" if type(v) != list else f"{k}_{'_'.join([str(i) for i in v])}" for k, v in
                   params['config'].items()])]) if params['model'].startswith('sk') else  "-".join(
        [params['model'], '_'.join([str(i) for i in params['layer']]),
         '_'.join([i[0] + i[-1] if type(i) == str else str(i) for i in params['features']]),
         params['optim'], str(params['speed_normalizer']), str(params['epochs']),
         '_'.join([str(i) for i in params['milestone']]), '_'.join(
            [f"{k}_{v}" if type(v) != list else f"{k}_{'_'.join([str(i) for i in v])}" for k, v in
             params['config'].items()]), f"lr_{params['learning_rate']}"])
        with open(RESULT_FNAME, 'a') as f:
            f.write("##" + str(i) + "\n" + PROJ_ID + "\nFAILED\n" + str(e) + "\n\n")

if __name__ == '__main__':
    all_params = [
        ## baseline
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour'],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        ## tanh
        # {
        #     'model': 'dnn_tanh',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour'],
        #     'speed_normalizer': 100,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_tanh',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 100,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_tanh',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 100,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_tanh',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 100,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        ## skmodels
        # {
        #     'model': 'skrandforest',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 768},
        # },
        # {
        #     'model': 'skadaboost',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 768},
        # },
        # {
        #     'model': 'skgradboost',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 768},
        # },
        # {
        #     'model': 'skxgblinear',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 768},
        # },
        # {
        #     'model': 'skxgbtree',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 768},
        # },
        # {
        #     'model': 'skxgbdart',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 768},
        # },
        # {
        #     'model': 'skrandforest',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 1024},
        # },
        # {
        #     'model': 'skadaboost',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 1024},
        # },
        # {
        #     'model': 'skgradboost',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 1024},
        # },
        # {
        #     'model': 'skxgblinear',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 1024},
        # },
        # {
        #     'model': 'skxgbtree',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 1024},
        # },
        # {
        #     'model': 'skxgbdart',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 1024},
        # },
        # {
        #     'model': 'skrandforest',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 128},
        # },
        # {
        #     'model': 'skadaboost',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 128},
        # },
        # {
        #     'model': 'skgradboost',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 128},
        # },
        # {
        #     'model': 'skxgblinear',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 128},
        # },
        # {
        #     'model': 'skxgbtree',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 128},
        # },
        # {
        #     'model': 'skxgbdart',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'mean_pressure', 'temp_max', 'temp_mean', 'temp_min',
        #                  'dew_point', 'humidity', 'cloud', 'rainfall', 'sunshine', 'wind_dir', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 128},
        # },
        ## regul
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.01},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.1},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.5},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 1},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        ## dropout
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.5], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.75], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [1], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        ## normalizer
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 100,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        ## layers number
        # {
        #     'model': 'dnn_relu',
        #     'layer': [1024, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [2048, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [512, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        ## features
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'rainfall', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'rainfall'],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'skgradboost',
        #     'features': ['month', 'day', 'weekday', 'hour'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 768},
        # },
        # {
        #     'model': 'skgradboost',
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'n': 768},
        # },
        # {
        #     'model': 'skgradboost',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'rainfall', 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 768},
        # },
        # {
        #     'model': 'skgradboost',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'rainfall'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 768},
        # },
        # {
        #     'model': 'skgradboost',
        #     'features': ['month', 'day', 'weekday', 'hour', 1, 'wind_speed'],
        #     'speed_normalizer': 1,
        #     'config': {'n': 768},
        # },
        ## regul+norm
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 100,
        #     'config': {'dropout': [0.25], 'regul': 0},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        ## batchnorm
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05, 'batchnorm': [True, True]},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05, 'batchnorm': [False, True]},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 1,
        #     'config': {'dropout': [0.25], 'regul': 0.05, 'batchnorm': [True, False]},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        ## batchnorm with norm
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 100,
        #     'config': {'dropout': [0.25], 'regul': 0.05, 'batchnorm': [True, True]},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 100,
        #     'config': {'dropout': [0.25], 'regul': 0.05, 'batchnorm': [False, True]},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        # {
        #     'model': 'dnn_relu',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 100,
        #     'config': {'dropout': [0.25], 'regul': 0.05, 'batchnorm': [True, False]},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        ## batchnorm with norm and tanh
        {
            'model': 'dnn_tanh',
            'layer': [768, 1],
            'features': ['month', 'day', 'weekday', 'hour', 1],
            'speed_normalizer': 100,
            'config': {'dropout': [0.25], 'regul': 0.05, 'batchnorm': [True, True]},
            'learning_rate': 1e-3,
            'optim': 'adamw',
            'epochs': 300,
            'scheduler': 'milestone',
            'milestone': [],
            'eval': 2,
            'batch_size': 8,
        },
        # {
        #     'model': 'dnn_tanh',
        #     'layer': [768, 1],
        #     'features': ['month', 'day', 'weekday', 'hour', 1],
        #     'speed_normalizer': 100,
        #     'config': {'dropout': [0.25], 'regul': 0.05, 'batchnorm': [False, True]},
        #     'learning_rate': 1e-3,
        #     'optim': 'adamw',
        #     'epochs': 300,
        #     'scheduler': 'milestone',
        #     'milestone': [],
        #     'eval': 2,
        #     'batch_size': 8,
        # },
        {
            'model': 'dnn_tanh',
            'layer': [768, 1],
            'features': ['month', 'day', 'weekday', 'hour', 1],
            'speed_normalizer': 100,
            'config': {'dropout': [0.25], 'regul': 0.05, 'batchnorm': [True, False]},
            'learning_rate': 1e-3,
            'optim': 'adamw',
            'epochs': 300,
            'scheduler': 'milestone',
            'milestone': [],
            'eval': 2,
            'batch_size': 8,
        },
    ]

    # FOR LOOP
    # USE_GPU = True
    # INFER = False
    # f = open(RESULT_FNAME, 'a')
    # for i, params in enumerate(all_params):
    #     print("##", i)
    #     try:
    #         if params['model'].startswith('sk'):
    #             PROJ_ID, LOSS = skmain(params, USE_GPU, INFER)
    #         else:
    #             PROJ_ID, LOSS = torchmain(params, USE_GPU, INFER)
    #         f.write(PROJ_ID + "\n" + f"{LOSS:.10f}\n\n")
    #     except Exception as e:
    #         f.write("##" + i + "\n" + PROJ_ID + "\nFAILED\n" + str(e) + "\n\n")
    # f.close()

    # MP
    with Pool(6) as pool:
        pool.map(dowork, enumerate(all_params))
